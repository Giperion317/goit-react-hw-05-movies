{"version":3,"file":"static/js/983.c9b9febe.chunk.js","mappings":"oMAGaA,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,GACCA,EAAOG,KAAI,gBAAEC,EAAF,EAAEA,eAAgBC,EAAlB,EAAkBA,GAAlB,OACP,yBACG,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAACC,KAAKP,GAAxC,SAAoDG,KAD9CC,EADF,KAOlB,C,uFCcD,UAxBiB,WACf,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,MACGC,KAAKL,GACLM,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,IACAC,SAAQ,WACPT,GAAa,EACd,GACJ,GAAE,KAED,gCACE,2CACCD,IAAa,SAAC,IAAD,KACZA,GAAaX,EAAOsB,SAAU,SAAC,IAAD,CAAQtB,OAAQA,MAGrD,C,+LCzBKuB,EAAU,mCAGT,SAAeT,IAAtB,4CAAO,OAAP,oBAAO,qGACkBU,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCzB,GAAlC,wFACkBmB,EAAAA,EAAAA,GAAM,UAAD,OAAWnB,GAAM,CAC3CoB,OAAQ,CACNC,QAASH,EACTQ,mBAAoB,YAJnB,cACCJ,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8B3B,GAA9B,wFACkBmB,EAAAA,EAAAA,GAAM,UAAD,OAAWnB,EAAX,YAAyB,CACnDoB,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiC5B,GAAjC,wFACkBmB,EAAAA,EAAAA,GAAM,UAAD,OAAWnB,EAAX,YAAyB,CACnDoB,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBX,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CC,OAAQ,CACNC,QAASH,EACTY,MAAAA,KAJC,cACCR,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEAvCPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Movies/Movies.jsx","pages/HomePage.jsx","services/moviesApi.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nexport const Movies = ({ movies }) => {\n  const location = useLocation()\n  return (\n    <ul>\n      {movies &&\n        movies.map(({original_title, id}) => (\n            <li key={id}>\n               <Link to={`/movies/${id}`} state={{from:location}}>{original_title}</Link>\n            </li>\n        ))}\n    </ul>\n  );\n};\n\nMovies.propTypes = {\n  movies: PropTypes.array.isRequired,\n};","import { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/moviesApi';\nimport { Movies } from 'components/Movies/Movies';\nimport { Loader } from 'components/Loader/Loader';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovies()\n      .then(setMovies)\n      .catch(error => {\n        console.log(error.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n  return (\n    <section>\n      <h1>Trending today</h1>\n      {isLoading && <Loader />}\n      {!isLoading && movies.length && <Movies movies={movies} />}\n    </section>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = 'abb31a7bed98d036dc34aaa5b39687ea';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMovieFullInfo(id) {\n  const response = await axios(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      append_to_response: 'videos',\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesSearch(query) {\n  const response = await axios('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data.results;\n}\n"],"names":["Movies","movies","location","useLocation","map","original_title","id","to","state","from","useState","setMovies","isLoading","setIsLoading","useEffect","fetchMovies","then","catch","error","console","log","message","finally","length","API_KEY","axios","params","api_key","response","data","results","fetchMovieFullInfo","append_to_response","fetchMovieCast","fetchMovieReviews","fetchMoviesSearch","query"],"sourceRoot":""}