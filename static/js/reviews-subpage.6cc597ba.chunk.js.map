{"version":3,"file":"static/js/reviews-subpage.6cc597ba.chunk.js","mappings":"mQAEaA,EAAWC,EAAAA,GAAAA,EAAH,sGAIV,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,IAGHC,EAAYL,EAAAA,GAAAA,EAAH,2DAEX,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,OAAvB,IAGHC,EAAcP,EAAAA,GAAAA,EAAH,6HAGb,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOK,MAAvB,I,SC2BhB,EAtCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACFA,EAAQC,QACbT,EAAWQ,EACZ,IACAE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,IACAC,SAAQ,WACPb,GAAa,EACd,GACJ,GAAE,CAACC,KAEF,gCACGF,IAAa,SAACe,EAAA,EAAD,IACZf,GAAgC,IAAnBF,EAAQU,QAGrB,wBACGV,EAAQkB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,UAAC1B,EAAD,qBAAmBwB,MACnB,SAACtB,EAAD,UAAcuB,MAFPC,EADE,OAHf,SAAChC,EAAD,0DAaP,C,2NCxCKiC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKnB,SANhB,kEASA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAAkCR,GAAlC,wFACkBG,EAAAA,EAAAA,GAAM,UAAD,OAAWH,GAAM,CAC3CI,OAAQ,CACNC,QAASJ,EACTQ,mBAAoB,YAJnB,cACCH,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BV,GAA9B,wFACkBG,EAAAA,EAAAA,GAAM,UAAD,OAAWH,EAAX,YAAyB,CACnDI,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCc,GAAjC,wFACkBG,EAAAA,EAAAA,GAAM,UAAD,OAAWH,EAAX,YAAyB,CACnDI,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBT,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CC,OAAQ,CACNC,QAASJ,EACTW,MAAAA,KAJC,cACCN,EADD,yBAOEA,EAASC,KAAKnB,SAPhB,kEAUA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAA0Bb,GAA1B,wFACkBG,EAAAA,EAAAA,GAAM,UAAD,OAAWH,EAAX,WAAwB,CAClDI,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKnB,SANhB,kEAjDPe,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const NoneText = styled.p`\n  text-align: center;\n  font-size: 26px;\n  padding: 20px 0;\n  color: ${props => props.theme.colors.black};\n`;\n\nexport const AutorName = styled.b`\n  font-size: 16px;\n  color: ${props => props.theme.colors.primory};\n`;\n\nexport const ReviewsText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  color: ${props => props.theme.colors.accent};\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/moviesApi';\nimport { Loader } from 'components/Loader/Loader';\nimport { NoneText, AutorName, ReviewsText } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovieReviews(movieId)\n      .then(({ results }) => {\n        if (!results.length) return;\n        setReviews(results);\n      })\n      .catch(error => {\n        console.log(error.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && reviews.length === 0 ? (\n        <NoneText>We don't have any reviews for this movie!</NoneText>\n      ) : (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <AutorName>Autor: {author}</AutorName>\n              <ReviewsText>{content}</ReviewsText>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'abb31a7bed98d036dc34aaa5b39687ea';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMovieFullInfo(id) {\n  const response = await axios(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      append_to_response: 'videos',\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesSearch(query) {\n  const response = await axios('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchVideo(id) {\n  const response = await axios(`/movie/${id}/videos`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n"],"names":["NoneText","styled","props","theme","colors","black","AutorName","primory","ReviewsText","accent","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovieReviews","then","results","length","catch","error","console","log","message","finally","Loader","map","author","content","id","API_KEY","fetchMovies","axios","params","api_key","response","data","fetchMovieFullInfo","append_to_response","fetchMovieCast","fetchMoviesSearch","query","fetchVideo"],"sourceRoot":""}