{"version":3,"file":"static/js/movie-full-info-page.e51ffdbb.chunk.js","mappings":"uPAEaA,E,OAAUC,GAAAA,IAAH,2C,SCoFpB,EA/E0B,WACxB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRP,GAAa,IACbQ,EAAAA,EAAAA,IAAmBP,GAChBQ,KAAKX,GACLY,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,IACAC,SAAQ,WACPf,GAAa,EACd,GACJ,GAAE,CAACC,IAQJ,OACE,gCACGF,IAAa,SAACiB,EAAA,EAAD,KACZjB,GAAaF,IACb,iCAEI,mBACEoB,KAAK,SACLC,QAAS,WAAO,IAAD,IACbf,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUc,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EAJH,sBASF,UAAC1B,EAAD,YACE,gBACE2B,IAAK,sCAAwCxB,EAAMyB,YACnDC,IAAK1B,EAAM2B,eACXC,MAAM,SAEP,wBAAK5B,EAAM2B,kBACZ,wCAAgB3B,EAAM6B,iBACtB,mBACA,sCACA,uBAAI7B,EAAM8B,YACV,mBACA,oCACA,uBAAI9B,EAAM+B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QAC/C,mBACA,mBACEX,IAAG,wCArCE,WACf,IAAMY,EAASpC,EAAMoC,OAAOC,QAC5B,OAAOD,EAAOE,MAAK,SAAAC,GAAK,MAAmB,YAAfA,EAAMnB,IAAV,IACpBgB,EAAOE,MAAK,SAAAC,GAAK,MAAmB,YAAfA,EAAMnB,IAAV,IAA8BoB,IAC/CJ,EAAO,GAAGI,GACf,CAgCiDC,IACtCC,MAAO1C,EAAM2B,eACbgB,YAAY,IACZC,iBAAe,QAGnB,mBACA,SAAC,KAAD,CAAMC,GAAE,OAAUvB,MAAOd,EAASc,MAAlC,mBAGA,SAAC,KAAD,CAAMuB,GAAE,UAAavB,MAAOd,EAASc,MAArC,sBAGA,mBACA,SAAC,EAAAwB,SAAD,CAAUC,UAAU,SAAC5B,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAMX,C,+LClFK6B,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKjB,SANhB,kEASA,SAAe1B,EAAtB,+CAAO,OAAP,oBAAO,WAAkC4C,GAAlC,wFACkBL,EAAAA,EAAAA,GAAM,UAAD,OAAWK,GAAM,CAC3CJ,OAAQ,CACNC,QAASJ,EACTQ,mBAAoB,YAJnB,cACCH,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,wFACkBL,EAAAA,EAAAA,GAAM,UAAD,OAAWK,EAAX,YAAyB,CACnDJ,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,wFACkBL,EAAAA,EAAAA,GAAM,UAAD,OAAWK,EAAX,YAAyB,CACnDJ,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBV,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CC,OAAQ,CACNC,QAASJ,EACTY,MAAAA,KAJC,cACCP,EADD,yBAOEA,EAASC,KAAKjB,SAPhB,kEAvCPa,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["pages/MovieFullInfoPage/MovieFullInfoPage.styled.js","pages/MovieFullInfoPage/MovieFullInfoPage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link, Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport { fetchMovieFullInfo } from 'services/moviesApi';\nimport { Loader } from 'components/Loader/Loader';\nimport { Wrapper } from './MovieFullInfoPage.styled';\n\nconst MovieFullInfoPage = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovieFullInfo(movieId)\n      .then(setMovie)\n      .catch(error => {\n        console.log(error.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  const getVideo = () => {\n    const videos = movie.videos.results;\n    return videos.find(video => video.type === 'Trailer')\n      ? videos.find(video => video.type === 'Trailer').key\n      : videos[0].key;\n  };\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && movie && (\n        <>\n          \n            <button\n              type=\"button\"\n              onClick={() => {\n                navigate(location?.state?.from ?? '/');\n              }}\n            >\n              Go back\n            </button>\n            \n          <Wrapper>\n            <img\n              src={'https://image.tmdb.org/t/p/original' + movie.poster_path}\n              alt={movie.original_title}\n              width=\"400\"\n            />\n             <h1>{movie.original_title}</h1>\n            <p>User Score: {movie.vote_average}</p>\n            <hr />\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <hr />\n            <h3>Genres</h3>\n            <p>{movie.genres.map(genre => genre.name).join(' ')}</p>\n            <hr />\n            <iframe\n              src={`https://www.youtube.com/embed/${getVideo()}`}\n              title={movie.original_title}\n              frameBorder=\"0\"\n              allowFullScreen\n            ></iframe>\n          </Wrapper>\n          <hr />\n          <Link to={`cast`} state={location.state}>\n            Cast\n          </Link>\n          <Link to={`reviews`} state={location.state}>\n            Revievs\n          </Link>\n          <hr />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieFullInfoPage;\n","import axios from 'axios';\n\nconst API_KEY = 'abb31a7bed98d036dc34aaa5b39687ea';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMovieFullInfo(id) {\n  const response = await axios(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      append_to_response: 'videos',\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesSearch(query) {\n  const response = await axios('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data.results;\n}\n"],"names":["Wrapper","styled","useState","movie","setMovie","isLoading","setIsLoading","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","fetchMovieFullInfo","then","catch","error","console","log","message","finally","Loader","type","onClick","state","from","src","poster_path","alt","original_title","width","vote_average","overview","genres","map","genre","name","join","videos","results","find","video","key","getVideo","title","frameBorder","allowFullScreen","to","Suspense","fallback","API_KEY","fetchMovies","axios","params","api_key","response","data","id","append_to_response","fetchMovieCast","fetchMovieReviews","fetchMoviesSearch","query"],"sourceRoot":""}