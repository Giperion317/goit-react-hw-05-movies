{"version":3,"file":"static/js/home-page.5a8858fb.chunk.js","mappings":"uNAGaA,EAAaC,EAAAA,GAAAA,GAAH,gGAMVC,EAAaD,EAAAA,GAAAA,GAAH,0aAeVE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sGAOVI,EAAUJ,EAAAA,GAAAA,IAAH,iKASPK,EAAcL,EAAAA,GAAAA,GAAH,gFAGb,SAAAM,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,OAAvB,I,SCtCHC,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjBC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIJ,IAEV,SAACZ,EAAD,UACGY,GACCA,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAIC,EAAvB,EAAuBA,YAAvB,OACT,SAAClB,EAAD,WACE,UAACC,EAAD,CAAYkB,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMV,GAAhD,WACE,gBACEW,IAAK,sCAAwCJ,EAC7CK,IAAKP,EACLQ,MAAM,SAER,SAACrB,EAAD,WACA,SAACC,EAAD,UAAcY,UARDC,EADR,KAgBlB,C,+HCzBYQ,E,OAAY1B,GAAAA,GAAH,wGAGX,SAAAM,GAAK,OAAIA,EAAMC,MAAMC,OAAOmB,MAAvB,I,SCyBhB,EAxBiB,WACf,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAekB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,MACGC,KAAKL,GACLM,OAAM,SAAAC,GACLtB,QAAQC,IAAIqB,EAAMC,QACnB,IACAC,SAAQ,WACPP,GAAa,EACd,GACJ,GAAE,KAED,iCACE,SAACL,EAAD,6BACCI,IAAa,SAACS,EAAA,EAAD,KACZT,GAAanB,EAAO6B,SAAU,SAAC9B,EAAA,EAAD,CAAQC,OAAQA,MAGrD,C,+LC1BK8B,EAAU,mCAGT,SAAeR,IAAtB,4CAAO,OAAP,oBAAO,qGACkBS,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkC9B,GAAlC,wFACkBwB,EAAAA,EAAAA,GAAM,UAAD,OAAWxB,GAAM,CAC3CyB,OAAQ,CACNC,QAASH,EACTQ,mBAAoB,YAJnB,cACCJ,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BhC,GAA9B,wFACkBwB,EAAAA,EAAAA,GAAM,UAAD,OAAWxB,EAAX,YAAyB,CACnDyB,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCjC,GAAjC,wFACkBwB,EAAAA,EAAAA,GAAM,UAAD,OAAWxB,EAAX,YAAyB,CACnDyB,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBX,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CC,OAAQ,CACNC,QAASH,EACTY,MAAAA,KAJC,cACCR,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEAvCPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Movies/Modies.styled.js","components/Movies/Movies.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","services/moviesApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nexport const MoviesItem = styled.li`\n  width: 270px;\n  margin-bottom: 20px;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 8px 12px 14px 2px rgba(71, 71, 71, 0.6);\n  }\n`;\n\nexport const MoviesLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const Wrapper = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 5px;\n  background-color: #e4e7e7;\n`;\n\nexport const MoviesTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  color: ${props => props.theme.colors.primory};\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MoviesItem, MoviesList, MoviesLink, Wrapper, MoviesTitle} from './Modies.styled';\nimport PropTypes from 'prop-types';\n\n\nexport const Movies = ({ movies }) => {\n  const location = useLocation();\n  console.log(movies);\n  return (\n    <MoviesList>\n      {movies &&\n        movies.map(({ original_title, id, poster_path}) => (\n          <MoviesItem key={id}>\n            <MoviesLink to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={'https://image.tmdb.org/t/p/original' + poster_path}\n                alt={original_title}\n                width=\"270\"\n              />\n              <Wrapper>\n              <MoviesTitle>{original_title}</MoviesTitle>\n                </Wrapper>\n            </MoviesLink>\n          </MoviesItem>\n        ))}\n    </MoviesList>\n  );\n};\n\nMovies.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const HomeTitle = styled.h1`\n  font-weight: 700;\n  font-size: 50px;\n  color: ${props => props.theme.colors.accent};\n  margin-bottom: 30px;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/moviesApi';\nimport { Movies } from 'components/Movies/Movies';\nimport { Loader } from 'components/Loader/Loader';\nimport { HomeTitle } from './HomePage.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovies()\n      .then(setMovies)\n      .catch(error => {\n        console.log(error.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n  return (\n    <>\n      <HomeTitle>Trending today</HomeTitle>\n      {isLoading && <Loader />}\n      {!isLoading && movies.length && <Movies movies={movies} />}\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = 'abb31a7bed98d036dc34aaa5b39687ea';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMovieFullInfo(id) {\n  const response = await axios(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      append_to_response: 'videos',\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesSearch(query) {\n  const response = await axios('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data.results;\n}\n"],"names":["MoviesList","styled","MoviesItem","MoviesLink","Link","Wrapper","MoviesTitle","props","theme","colors","primory","Movies","movies","location","useLocation","console","log","map","original_title","id","poster_path","to","state","from","src","alt","width","HomeTitle","accent","useState","setMovies","isLoading","setIsLoading","useEffect","fetchMovies","then","catch","error","message","finally","Loader","length","API_KEY","axios","params","api_key","response","data","results","fetchMovieFullInfo","append_to_response","fetchMovieCast","fetchMovieReviews","fetchMoviesSearch","query"],"sourceRoot":""}