{"version":3,"file":"static/js/115.deaa1df2.chunk.js","mappings":"sMA4CA,UAvCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAeH,GACZI,MAAK,YAAe,IAAZR,EAAW,EAAXA,KACFA,EAAKS,QACVR,EAAQD,EACT,IACAU,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,IAAEC,SAAQ,WACTZ,GAAa,EACd,GACJ,GAAE,CAACC,KAEF,gCACGF,IAAa,SAAC,IAAD,IACZA,GAA6B,IAAhBF,EAAKS,QAGjB,wBACFT,EAAKgB,KAAI,gBAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,GAAjC,OACJ,2BACI,gBAAKC,IAAK,sCAAwCF,EAAcG,IAAKJ,EAAMK,MAAM,QACjF,uBAAIL,KACJ,uCAAeD,OAHVG,EADL,OAHR,gEAeP,C,+LCxCKI,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCZ,GAAlC,wFACkBM,EAAAA,EAAAA,GAAM,UAAD,OAAWN,GAAM,CAC3CO,OAAQ,CACNC,QAASJ,EACTS,mBAAoB,YAJnB,cACCJ,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAA8Ba,GAA9B,wFACkBM,EAAAA,EAAAA,GAAM,UAAD,OAAWN,EAAX,YAAyB,CACnDO,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCd,GAAjC,wFACkBM,EAAAA,EAAAA,GAAM,UAAD,OAAWN,EAAX,YAAyB,CACnDO,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBV,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CC,OAAQ,CACNC,QAASJ,EACTY,MAAAA,KAJC,cACCP,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEAvCPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["pages/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from \"services/moviesApi\";\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovieCast(movieId)\n      .then(({ cast }) => {\n        if (!cast.length) return;\n        setCast(cast);\n      })\n      .catch(error => {\n        console.log(error.message);\n      }).finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && cast.length === 0 ? (\n        <p>We don't have cast for this movie.</p>\n      ) : (\n         <ul>\n      {cast.map(({character, name, profile_path, id}) => (\n            <li key={id}>\n                <img src={'https://image.tmdb.org/t/p/original' + profile_path} alt={name} width='60' />\n                <b>{name}</b>\n                <p>Character: {character}</p>\n            </li>\n        ))}\n    </ul>\n      )}\n    </>\n       \n    )\n}\n\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = 'abb31a7bed98d036dc34aaa5b39687ea';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMovieFullInfo(id) {\n  const response = await axios(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      append_to_response: 'videos',\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesSearch(query) {\n  const response = await axios('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data.results;\n}\n"],"names":["useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovieCast","then","length","catch","error","console","log","message","finally","map","character","name","profile_path","id","src","alt","width","API_KEY","fetchMovies","axios","params","api_key","response","data","results","fetchMovieFullInfo","append_to_response","fetchMovieReviews","fetchMoviesSearch","query"],"sourceRoot":""}