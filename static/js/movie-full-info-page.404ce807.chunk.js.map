{"version":3,"file":"static/js/movie-full-info-page.404ce807.chunk.js","mappings":"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","sources":["pages/MovieFullInfoPage/MovieFullInfoPage.styled.js","pages/MovieFullInfoPage/MovieFullInfoPage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackButton = styled.button`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  height: 25px;\n  margin-left: 30px;\n  margin-bottom: 20px;\n  color: ${props => props.theme.colors.primory};\n  background-color: #e4e7e7;\n  border-radius: 2px;\n  border-color: transparent;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  :focus {\n    background-color: ${props => props.theme.colors.accent};\n    color: ${props => props.theme.colors.white};\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n      0px 2px 2px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const WrapperInfo = styled.div`\n  width: 300px;\n  flex-wrap: wrap;\n  margin-left: 20px;\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 600px;\n  }\n`;\n\nexport const MoviesTitle = styled.h1`\n  font-size: 40px;\n  font-weight: 700;\n  color: ${props => props.theme.colors.accent};\n  margin-bottom: 20px;\n`;\n\nexport const InfoImg = styled.img`\n  width: 300px;\n  height: 100%;\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 400px;\n  }\n`;\n\nexport const InfoTitle = styled.h1`\n  font-size: 30px;\n  font-weight: 500;\n  color: ${props => props.theme.colors.primory};\n  margin-bottom: 10px;\n`;\n\nexport const InfoText = styled.h1`\n  font-size: 18px;\n  color: ${props => props.theme.colors.accent};\n  margin-bottom: 10px;\n`;\n\nexport const InfoVideo = styled.iframe`\n  width: 250px;\n  @media screen and (min-width: 1200px) {\n    width: 400px;\n    height: 230px;\n  }\n`;\n\nexport const InfoLink = styled(Link)`\n  font-size: 18px;\n  font-weight: 500;\n  color: ${props => props.theme.colors.primory};\n  margin-right: 60px;\n  margin-bottom: 20px;\n`;\n\nexport const InfoLine = styled.hr`\n  color: ${props => props.theme.colors.primory};\n  margin: 20px 0;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Outlet, useNavigate, useLocation} from 'react-router-dom';\nimport { fetchMovieFullInfo } from 'services/moviesApi';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  Wrapper,\n  WrapperInfo,\n  BackButton,\n  MoviesTitle,\n  InfoTitle,\n  InfoText,\n  InfoVideo,\n  InfoImg,\n  InfoLink,\n  InfoLine,\n} from './MovieFullInfoPage.styled';\nimport { IconContext } from 'react-icons';\nimport { BiChevronsLeft } from 'react-icons/bi';\n\nconst MovieFullInfoPage = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovieFullInfo(movieId)\n      .then(setMovie)\n      .catch(error => {\n        console.log(error.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  const getVideo = () => {\n    const videos = movie.videos.results;\n    return videos.find(video => video.type === 'Trailer')\n      ? videos.find(video => video.type === 'Trailer').key\n      : videos[0].key;\n  };\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && movie && (\n        <>\n          <BackButton\n            type=\"button\"\n            onClick={() => {\n              navigate(location?.state?.from ?? '/');\n            }}\n          >\n            <IconContext.Provider value={{ size: 30, color: '#e31e28' }}>\n              <BiChevronsLeft />\n            </IconContext.Provider>\n            Go back\n          </BackButton>\n          <MoviesTitle>{movie.original_title}</MoviesTitle>\n          <Wrapper>\n            <InfoImg\n              src={'https://image.tmdb.org/t/p/original' + movie.poster_path}\n              alt={movie.original_title}\n              \n            />\n            <WrapperInfo>\n              <InfoText>User Score: {movie.vote_average * 10}%</InfoText>\n              <hr />\n              <InfoTitle>Overview</InfoTitle>\n              <InfoText>{movie.overview}</InfoText>\n              <hr />\n              <InfoTitle>Genres</InfoTitle>\n              <InfoText>{movie.genres.map(genre => genre.name).join(' ')}</InfoText>\n              <hr />\n              <InfoTitle>Trailer</InfoTitle>\n              <InfoVideo\n                src={`https://www.youtube.com/embed/${getVideo()}`}\n                title={movie.original_title}\n                allowFullScreen\n              ></InfoVideo>\n            </WrapperInfo>\n          </Wrapper>\n          <InfoLine />\n          <InfoLink to={`cast`} state={location.state}>\n            Cast\n          </InfoLink>\n          <InfoLink to={`reviews`} state={location.state}>\n            Revievs\n          </InfoLink>\n          <InfoLine/>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieFullInfoPage;\n","import axios from 'axios';\n\nconst API_KEY = 'abb31a7bed98d036dc34aaa5b39687ea';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMovieFullInfo(id) {\n  const response = await axios(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      append_to_response: 'videos',\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesSearch(query) {\n  const response = await axios('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data.results;\n}\n"],"names":["BackButton","styled","props","theme","colors","primory","accent","white","Wrapper","WrapperInfo","MoviesTitle","InfoImg","InfoTitle","InfoText","InfoVideo","InfoLink","Link","InfoLine","useState","movie","setMovie","isLoading","setIsLoading","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","fetchMovieFullInfo","then","catch","error","console","log","message","finally","Loader","type","onClick","state","from","value","size","color","original_title","src","poster_path","alt","vote_average","overview","genres","map","genre","name","join","videos","results","find","video","key","getVideo","title","allowFullScreen","to","Suspense","fallback","API_KEY","fetchMovies","axios","params","api_key","response","data","id","append_to_response","fetchMovieCast","fetchMovieReviews","fetchMoviesSearch","query"],"sourceRoot":""}